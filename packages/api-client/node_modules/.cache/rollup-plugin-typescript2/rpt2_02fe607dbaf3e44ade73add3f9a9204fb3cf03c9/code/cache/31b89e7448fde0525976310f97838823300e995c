{"code":"export {};\r\n//# sourceMappingURL=types.js.map","references":[],"map":"{\"version\":3,\"file\":\"types.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../src/types.ts\"],\"names\":[],\"mappings\":\"\"}","dts":{"name":"E:/PRASAD/Dasha/23-03-2021/shopify/packages/api-client/node_modules/.cache/rollup-plugin-typescript2/placeholder/types.d.ts","writeByteOrderMark":false,"text":"export declare type Maybe<T> = T | null;\r\nexport declare type Scalars = {\r\n    ID: string;\r\n    String: string;\r\n    Boolean: boolean;\r\n    Int: number;\r\n    Float: number;\r\n    /** The `Long` scalar type represents non-fractional signed whole numeric values.\r\n     * Long can represent values between -(2^63) and 2^63 - 1.\r\n     */\r\n    Long: any;\r\n    /** DateTime is a scalar value that represents an ISO8601 formatted date and time. */\r\n    DateTime: any;\r\n    /** [ISO 3166-1](http://en.wikipedia.org/wiki/ISO_3166-1) country code. */\r\n    Country: any;\r\n    /** Locale is a scalar value represented as a string language tag. */\r\n    Locale: any;\r\n    /** DateTime is a scalar value that represents an ISO8601 formatted date. */\r\n    Date: any;\r\n    /** Raw JSON value */\r\n    Json: any;\r\n    /** Array */\r\n    Array: any;\r\n    /** Represents a currency. Currencies are identified by their [ISO\r\n     * 4217](http://www.iso.org/iso/home/standards/currency_codes.htm) currency codes.\r\n     */\r\n    Currency: any;\r\n    /** A key that references a resource. */\r\n    KeyReferenceInput: any;\r\n    /** Search filter. It is represented as a string and has th same format as in REST API: \"field:filter_criteria\" */\r\n    SearchFilter: any;\r\n    /** Search sort */\r\n    SearchSort: any;\r\n    /** YearMonth is a scalar value that represents an ISO8601 formatted year and month. */\r\n    YearMonth: any;\r\n    /** The `BigDecimal` scalar type represents signed fractional values with arbitrary precision. */\r\n    BigDecimal: any;\r\n    /** Time is a scalar value that represents an ISO8601 formatted time. */\r\n    Time: any;\r\n};\r\nexport declare type Cart = {\r\n    __typename?: 'Cart';\r\n    appliedGiftCards: Maybe<Scalars['Array']>;\r\n    completedAt: Maybe<Scalars['String']>;\r\n    createdAt: Maybe<Scalars['String']>;\r\n    currencyCode: Maybe<Scalars['String']>;\r\n    customAttributes: Maybe<Scalars['Array']>;\r\n    discountApplications: Maybe<Scalars['Array']>;\r\n    email: Maybe<Scalars['String']>;\r\n    errors: Maybe<Scalars['Json']>;\r\n    id: Maybe<Scalars['String']>;\r\n    lineItems?: Maybe<Scalars['Array']>;\r\n    lineItemsSubtotalPrice?: Maybe<Scalars['Json']>;\r\n    note?: Maybe<Scalars['String']>;\r\n    order?: Maybe<Scalars['String']>;\r\n    orderStatusUrl?: Maybe<Scalars['String']>;\r\n    paymentDue?: Maybe<Scalars['String']>;\r\n    ready?: Maybe<Scalars['String']>;\r\n    requiresShipping?: Maybe<Scalars['String']>;\r\n    shippingAddress?: Maybe<Scalars['Json']>;\r\n    shippingLine?: Maybe<Scalars['String']>;\r\n    subtotalPrice?: Maybe<Scalars['String']>;\r\n    taxExempt?: Maybe<Scalars['String']>;\r\n    taxesIncluded?: Maybe<Scalars['String']>;\r\n    totalPrice?: Maybe<Scalars['String']>;\r\n    totalTax?: Maybe<Scalars['String']>;\r\n    updatedAt?: Maybe<Scalars['String']>;\r\n    userErrors?: Maybe<Scalars['Array']>;\r\n    webUrl?: Maybe<Scalars['String']>;\r\n};\r\nexport declare type CartItem = {\r\n    __typename?: 'CartItem';\r\n    id: Maybe<Scalars['String']>;\r\n    variant?: Maybe<Scalars['Array']>;\r\n};\r\nexport declare type Wishlist = {};\r\nexport declare type ProductVariant = {\r\n    __typename?: 'ProductVariant';\r\n    _id?: Maybe<Scalars['String']>;\r\n    _description: Maybe<Scalars['String']>;\r\n    _descriptionHtml: Maybe<Scalars['String']>;\r\n    _slug: Maybe<Scalars['String']>;\r\n    _categoriesRef: string[];\r\n    name: Maybe<Scalars['String']>;\r\n    images: Maybe<Scalars['Array']>;\r\n    product?: Maybe<Scalars['Array']>;\r\n    options: Maybe<Scalars['Array']>;\r\n    variantBySelectedOptions?: Maybe<Scalars['Array']>;\r\n    _coverImage: Maybe<Scalars['String']>;\r\n    price: {\r\n        original: number;\r\n        current: number;\r\n    };\r\n    variants?: Maybe<Scalars['Array']>;\r\n    available?: Maybe<Scalars['Boolean']>;\r\n    productType: Maybe<Scalars['String']>;\r\n    _availableForSale?: Maybe<Scalars['Boolean']>;\r\n};\r\nexport declare type Category = {\r\n    id: number;\r\n    name: string;\r\n    slug: string;\r\n    items: Category[];\r\n};\r\nexport declare type CategoryFilter = {};\r\nexport declare type ShippingMethod = {};\r\nexport declare type LineItem = {\r\n    __typename?: 'LineItem';\r\n    customAttributes: Maybe<Scalars['Array']>;\r\n    discountAllocations: Maybe<Scalars['Array']>;\r\n    hasNextPage: Maybe<Scalars['String']>;\r\n    hasPreviousPage: Maybe<Scalars['String']>;\r\n    id: Maybe<Scalars['String']>;\r\n    quantity: Maybe<Scalars['Int']>;\r\n    title: Maybe<Scalars['String']>;\r\n    variant: {\r\n        available: Maybe<Scalars['Boolean']>;\r\n        compareAtPriceV2: Maybe<Scalars['String']>;\r\n        currentlyNotInStock: Maybe<Scalars['Boolean']>;\r\n        id: Maybe<Scalars['String']>;\r\n        image: {\r\n            altText: Maybe<Scalars['String']>;\r\n            id: Maybe<Scalars['String']>;\r\n            src: Maybe<Scalars['String']>;\r\n        };\r\n        price: Maybe<Scalars['String']>;\r\n        compareAtPrice: Maybe<Scalars['String']>;\r\n        priceV2: Maybe<Scalars['Json']>;\r\n        product: Maybe<Scalars['Json']>;\r\n        quantityAvailable: Maybe<Scalars['Int']>;\r\n        sku: Maybe<Scalars['String']>;\r\n        title: Maybe<Scalars['String']>;\r\n        unitPrice: Maybe<Scalars['String']>;\r\n        weight: Maybe<Scalars['Float']>;\r\n        selectedOptions?: Maybe<Scalars['Array']>;\r\n    };\r\n};\r\n"}}
